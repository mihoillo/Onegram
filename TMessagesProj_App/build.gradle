plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

dependencies {
    implementation project(':TMessagesProj')
    implementation files('../TMessagesProj/libs/libgsaverification-client.aar')
}

android {
    defaultConfig.applicationId = APP_PACKAGE

    packagingOptions {
        resources {
            excludes += '**'
        }
    }

    Properties localProperties = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    }

    signingConfigs {
        if (localProperties.getProperty("storeFile") != null) {
            sign {
                storeFile file(localProperties.getProperty("storeFile"))
                storePassword localProperties.getProperty("storePassword")
                keyAlias localProperties.getProperty("keyAlias")
                keyPassword localProperties.getProperty("keyPassword")
            }
        }
    }

    buildTypes {
        debug {
            if (localProperties.getProperty("storeFile") != null) {
                signingConfig signingConfigs.sign
            }
            applicationIdSuffix ".beta"
        }

        release {
            minifyEnabled true
            shrinkResources true
            vcsInfo.include false
            if (localProperties.getProperty("storeFile") != null) {
                signingConfig signingConfigs.sign
            } else {
                signingConfig signingConfigs.debug
            }
            proguardFiles '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel 'FULL'
        }
    }

    defaultConfig.versionCode = Integer.parseInt(APP_VERSION_CODE)

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            def abi = output.getFilter('ABI')
            if (abi == null) abi = 'universal'
            outputFileName = "Nekogram-${defaultConfig.versionName}-${defaultConfig.versionCode}-${abi}.apk"
            output.versionCodeOverride = defaultConfig.versionCode * 10
        }
    }

    defaultConfig {
        versionName APP_VERSION_NAME

        multiDexEnabled true
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    splits.abi {
        enable true
        universalApk true

        reset()
        include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
    }
    namespace 'org.telegram.messenger.regular'

    dependenciesInfo.includeInApk false
}
